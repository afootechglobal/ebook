import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import { GetUserRegExamApi, GetExamSubscriptionApi, GetAllTransactionApi, GetAllWalletHistoryApi } from './ApiFunction';
import { useUser } from './UserContext';
import ShowAlert from './alert';

import "../Portal/Style/Paramount.css";


const UploadedFilesUrl = 'http://localhost:3000/UploadedFiles';


const numberwithcomma = (amount) => {
    return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}








export const UserProfile = () => {
    const navigate = useNavigate();



    //// get user login details
    // const userProfile = useUser();

    ///// alert useSate paramenters
    const [successMessage, setSuccessMessage] = useState(false);
    const [showAlert, setShowAlert] = useState(false);

    const alertClose = () => {
        setShowAlert(false);
    };

    const [isLoading, setIsLoading] = useState(false);



    // useEffect(() => {
      
    //     const sessionToken = JSON.parse(sessionStorage.getItem('userLoginSession'));
    //     if (!sessionToken) {
    //         // User is not authenticated, redirect to login
    //         sessionStorage.removeItem('userLoginSession');
    //         navigate('/user/login');
    //         return;
    //     }
    // }, [navigate]);

    const sessionToken = JSON.parse(sessionStorage.getItem('userLoginSession'));
        const [updateUserProfile, setUpdateUserProfile] = useState({
            action: 'update_user_api',
            fullname: sessionToken.data.fullname,
            email: sessionToken.data.email,
            mobile: sessionToken.data.mobile,
        });
    
    

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setUpdateUserProfile({ ...updateUserProfile, [name]: value });
    };


    const updateProfile = async () => {
        setIsLoading(true);
            // const sessionToken = JSON.parse(sessionStorage.getItem('userLoginSession'));

             const apiUrl = 'http://localhost/api/user/?access_key=' + sessionToken.access_key;

            try {
                const endpoint = await axios.post(apiUrl, updateUserProfile);
                const responseData = endpoint.data;
                const result = responseData.result;
                // const message1 = responseData.message1;
                // const message2 = responseData.message2;

                if (result === true) {
                    // sessionStorage.setItem("userLoginSession", JSON.stringify(responseData));
                    setSuccessMessage(responseData);
                    setShowAlert(responseData);
                } else {
                    setSuccessMessage(responseData);
                    setShowAlert(responseData);
                }
            } catch (error) {
                // fetch error
                console.error('Error:', error);
            } finally {
                setIsLoading(false);
            }
    };
   

    return (
        <>

            <div className="table-div animated fadeIn" id="search-content">
                <div className="div-in">
                    <div className="container-title title2"><i className="bi bi-person-square"></i> MY ROFILE </div>
                    <br clear="all" />
                    <div className="user-account-div">
                        <div className="profile-div">
                            <label>
                                <div className="profile-pix" id="profile_pix"><img src="<?php echo $website_url?>/uploaded_files/user_pix/friends.png" id="passportimg4" /></div>
                                <input type="file" id="passport" accept=".jpg,.png,.jpeg,.PNG,.JPG,.JPEG" onchange="user_profile_pix.UpdatePreviewPix(this);" style={{ display: 'none' }} />
                            </label>
                        </div>


                        <div className="profile-div info-div">
                            <div className="title">
                                FULLNAME: <span>*</span>
                            </div>
                            <input
                                id="fullname"
                                type="text"
                                name="fullname"
                                value={updateUserProfile.fullname}
                                onChange={handleInputChange}
                                className="text_field"
                                placeholder="FULLNAME"
                                title="FULLNAME"
                            />
                            <div className="title">
                                EMAIL ADDRESS: <span>*</span>
                            </div>
                            <input
                                id="email"
                                type="text"
                                name="email"
                                value={updateUserProfile.email}
                                onChange={handleInputChange}
                                className="text_field"
                                placeholder="EMAIL ADDRESS"
                                title="EMAIL ADDRESS"
                            />
                            <div className="title">
                                PHONE NUMBER: <span>*</span>{' '}
                                <span style={{ float: 'right', fontSize: '10px', display: 'none', color: '#f00' }} id="verify_mobile_info">
                                    Phone number not accepted!
                                </span>
                            </div>
                            <input
                                id="mobile"
                                type="text"
                                name="mobile"
                                value={updateUserProfile.mobile}
                                onChange={handleInputChange}
                                // onKeyPress={isNumber_Check} // You might want to define isNumber_Check function
                                className="text_field"
                                placeholder="PHONE NUMBER"
                                title="PHONE NUMBER"
                            />
                            <button className="action-btn" type="button" id="update_btn" disabled={isLoading} onClick={updateProfile}>
                                {isLoading ? 'UPDATING' : 'UPDATE PROFILE'}
                            </button>
                        </div>

                    </div>
                </div>
            </div>

            {showAlert &&
                <ShowAlert
                    message={successMessage.message1}
                    additionalMessage={successMessage.message2}
                    alertResult={showAlert.result}
                    onClose={alertClose}
                />
            }
        </>

    )

};





















export const UserExam = () => {
    const { FetchData: userRegExamDetails, isLoading: AjaxLoader2 } = GetExamSubscriptionApi('fetch_exam_api');

    if (AjaxLoader2) {
        return <p>Loading...</p>
    }

    return (
        <>

            <div className="table-div animated fadeIn" id="search-content">
                <div className="div-in">
                    <div className="container-title title2"><i className="bi-pencil-square"></i>  EXAM / VIDEO </div>
                    <div className="input-search-div">
                        <input id="search_txt" style={{ display: 'none' }} onkeyup="_fetch_users_list()" type="text" className="text_field" placeholder="Type here to search..." title="Type here to search" />
                        <button type="button" className="top-btn" onClick="_get_page('exam_category', 'exam')">Subcribe <i className="bi bi-box-arrow-in-up-right"></i></button>
                    </div>

                    <div className="table-div-in">
                        <table className="table" cellspacing="0" id="fetch_exam_details_with_limit" >
                            <tr className="tb-col">
                                <td>SN</td>
                                <td>EXAM</td>
                                <td>NO. OF SUBJECT</td>
                                <td>ACTION</td>

                            </tr>

                            {userRegExamDetails.map((record, index) => (
                                <tr key={record.exam_id}>

                                    <td>{index + 1}</td>
                                    <td className="logo-tb logo-tb2">
                                        <div className="logo-div">
                                            {record.exam_passport ? (
                                                // Render image from the database if available
                                                <img src={`${UploadedFilesUrl}/ExamPix/${record.exam_passport}`} alt={`${record.abbreviation} LOGO`} />
                                            ) : (
                                                // Render image from the local directory if not available in the database
                                                <img src={`${UploadedFilesUrl}/ExamPix/default_pix.jpg`} alt={`${record.abbreviation} LOGO`} />
                                            )}
                                        </div>
                                        <span id="">{record.abbreviation.toUpperCase()}</span>
                                    </td>
                                    <td>{record.exam_subject_count.toUpperCase()}</td>

                                    <td>
                                        <button className="btn">
                                            <i className="bi bi-play"></i> VIEW
                                        </button>
                                    </td>
                                </tr>
                            ))}


                        </table>
                    </div>
                    <div className="bottom-count-div">
                        <span id="dashboard_sub_count">{userRegExamDetails.length}</span> of <span id="dashboard_sub_total_count">{userRegExamDetails.length}</span>


                        <button className="top-btn bottom-btn" onClick="_get_page('exam_category', 'exam')" id="exam" type="button" ><i className="bi bi-eye"></i> View All</button>
                    </div>
                </div>

            </div>



        </>

    )

};










export const ExamSubscriptions = () => {
    const { FetchData: userExamSubDetails, isLoading: AjaxLoader1 } = GetUserRegExamApi('fetch_subscription_api');

    if (AjaxLoader1) {
        return <p>Loading...</p>
    }

    return (

        <div className="table-div animated fadeIn" id="search-content">
            <div className="div-in">
                <div className="container-title title2"><i className="bi-pencil-square"></i>  EXAM SUBSCRIPTION </div>
                <div className="input-search-div">
                    <input id="search_txt" style={{ display: 'none' }} onkeyup="_fetch_users_list()" type="text" className="text_field" placeholder="Type here to search..." title="Type here to search" />
                    <button type="button" className="top-btn" onClick="_get_page('exam_category', 'exam')">Subcribe <i className="bi bi-box-arrow-in-up-right"></i></button>
                </div>

                <div className="table-div-in">
                    <table className="table" cellspacing="0" id="fetch_exam_details_with_limit" >
                        <tr className="tb-col">
                            <td>SN</td>
                            <td>EXAM</td>
                            <td>SUBJECT</td>
                            <td>TOPIC</td>
                            <td>SUB-TOPIC</td>
                            <td>DATE</td>
                            <td>DUE DATE</td>
                            <td>STATUS</td>
                            <td>ACTION</td>
                        </tr>

                        {userExamSubDetails.map((record, index) => (
                            <tr key={record.exam_id}>

                                <td>{index + 1}</td>
                                <td className="logo-tb logo-tb2">
                                    <div className="logo-div">
                                        {record.exam_passport ? (
                                            // Render image from the database if available
                                            <img src={`${UploadedFilesUrl}/ExamPix/${record.exam_passport}`} alt={`${record.abbreviation} LOGO`} />
                                        ) : (
                                            // Render image from the local directory if not available in the database
                                            <img src={`${UploadedFilesUrl}/ExamPix/default_pix.jpg`} alt={`${record.abbreviation} LOGO`} />
                                        )}
                                    </div>
                                    <span id="">{record.abbreviation.toUpperCase()}</span>
                                </td>
                                <td>{record.subject_name.toUpperCase()}</td>
                                <td>{record.topic_name.toUpperCase()}</td>
                                <td>{record.sub_topic_name.toUpperCase()}</td>
                                <td>{record.date}</td>
                                <td>{record.due_date}</td>
                                <td>
                                    <div className={`status-div ${record.status_name}`}>
                                        {record.status_name.toUpperCase()}
                                    </div>
                                </td>
                                <td>
                                    <button className="btn">
                                        <i className="bi bi-play"></i> PLAY
                                    </button>
                                </td>
                            </tr>
                        ))}


                    </table>
                </div>
                <div className="bottom-count-div">
                    <span id="dashboard_sub_count">{userExamSubDetails.length}</span> of <span id="dashboard_sub_total_count">{userExamSubDetails.length}</span>


                    <button className="top-btn bottom-btn" onClick="_get_page('exam_category', 'exam')" id="exam" type="button" ><i className="bi bi-eye"></i> View All</button>
                </div>
            </div>

        </div>


    )

};








export const Transactions = () => {
    const { FetchData: TransactionDetails, isLoading: AjaxLoader3 } = GetAllTransactionApi('fetch_transaction_history_api');

    if (AjaxLoader3) {
        return <p>Loading...</p>;
    }
    return (
        <>

            <div className="table-div animated fadeIn" id="search-content">
                <div className="div-in">
                    <div className="container-title title2"><i className="bi bi-credit-card"></i>  TRANSACTIONS  </div>
                    <div className="input-search-div">
                        <input id="search_txt" style={{ display: 'none' }} onkeyup="_fetch_users_list()" type="text" className="text_field" placeholder="Type here to search..." title="Type here to search" />
                        <button type="button" className="top-btn" onClick="_get_page('exam_category', 'exam')">Subcribe <i className="bi bi-box-arrow-in-up-right"></i></button>
                    </div>

                    <div className="table-div-in">
                        <table className="table" cellspacing="0" id="fetch_exam_details_with_limit" >
                            <tr className="tb-col">
                                <td>SN</td>
                                <td>DATE</td>
                                <td>TRANSACTION ID</td>
                                <td>TRANSACTION TYPE</td>
                                <td>TRANSACTION METHOD</td>
                                <td>AMOUNT</td>
                                <td>STATUS</td>
                                <td>ACTION</td>

                            </tr>

                            {TransactionDetails.map((record, index) => (
                                <tr key={record.exam_id}>

                                    <td>{index + 1}</td>
                                    <td>{record.date}</td>
                                    <td>{record.payment_id}</td>
                                    <td>{record.transaction_type_name}</td>
                                    <td>{record.fund_method_name}</td>
                                    <td>{`₦ ${numberwithcomma(record.amount)}`}</td>

                                    <td><div className={`status-div ${record.status_name}`}>{record.status_name}</div></td>

                                    <td>
                                        <button className="btn">
                                            <i className="bi bi-eye"></i> DETAILS
                                        </button>
                                    </td>
                                </tr>
                            ))}


                        </table>
                    </div>
                    <div className="bottom-count-div">
                        <span id="dashboard_sub_count">{TransactionDetails.length}</span> of <span id="dashboard_sub_total_count">{TransactionDetails.length}</span>


                        <button className="top-btn bottom-btn" onClick="_get_page('exam_category', 'exam')" id="exam" type="button" ><i className="bi bi-eye"></i> View All</button>
                    </div>
                </div>

            </div>



        </>

    )

};






export const WalletHistory = () => {
    const { FetchData: WalletHistoryDetails, isLoading: AjaxLoader4 } = GetAllWalletHistoryApi('fetch_wallet_history_api');

    if (AjaxLoader4) {
        return <p>Loading...</p>;
    }
    return (
        <>

            <div className="table-div animated fadeIn" id="search-content">
                <div className="div-in">
                    <div className="container-title title2"><i className="bi bi-credit-card"></i>  WALLET HISTORY  </div>
                    <div className="input-search-div">
                        <input id="search_txt" style={{ display: 'none' }} onkeyup="_fetch_users_list()" type="text" className="text_field" placeholder="Type here to search..." title="Type here to search" />
                        <button type="button" className="top-btn" onClick="_get_page('exam_category', 'exam')">Subcribe <i className="bi bi-box-arrow-in-up-right"></i></button>
                    </div>

                    <div className="table-div-in">
                        <table className="table" cellspacing="0" id="fetch_exam_details_with_limit" >
                            <tr className="tuple">
                                <td>SN</td>
                                <td>DATE</td>
                                <td>TRANSACTION ID</td>
                                <td>BALANCE BEFORE</td>
                                <td>AMOUNT LOADED</td>
                                <td>BALANCE AFTER</td>
                                <td>TRANSACTION TYPE</td>
                                <td>STATUS</td>
                            </tr>




                            {WalletHistoryDetails.map((record, index) => (
                                <tr key={record.exam_id}>

                                    <td>{index + 1}</td>
                                    <td>{record.date}</td>
                                    <td>{record.payment_id}</td>
                                    <td>{`₦ ${numberwithcomma(record.balance_before)}`}</td>
                                    <td className="amount_load">{`₦ ${numberwithcomma(record.amount)}`}</td>
                                    <td>{`₦ ${numberwithcomma(record.balance_after)}`}</td>
                                    <td>{record.transaction_type_name}</td>

                                    <td><div className={`status-div ${record.status_name}`}>{record.status_name}</div></td>

                                </tr>
                            ))}


                        </table>
                    </div>
                    <div className="bottom-count-div">
                        <span id="dashboard_sub_count">{WalletHistoryDetails.length = 5}</span> of <span id="dashboard_sub_total_count">{WalletHistoryDetails.length > 5}</span>
                        <button className="top-btn bottom-btn" onClick="_get_page('exam_category', 'exam')" id="exam" type="button" ><i className="bi bi-eye"></i> View All</button>
                    </div>
                </div>

            </div>



        </>

    )

};